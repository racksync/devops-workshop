image: docker:20.10.16

services:
  - docker:20.10.16-dind

variables:
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - scan
  - push

before_script:
  - docker info

build:
  stage: build
  script:
    - docker build -t $CI_REGISTRY_IMAGE/docker-registry-demo:$CI_COMMIT_SHORT_SHA .
    - docker build -t $CI_REGISTRY_IMAGE/docker-registry-demo:latest .

scan:
  stage: scan
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  variables:
    # No need for the Trivy database in the container as we download it on demand
    TRIVY_NO_PROGRESS: "true"
    TRIVY_CACHE_DIR: .trivycache/
  script:
    - trivy --version
    # First, scan filesystem
    - trivy fs --security-checks vuln,config .
    # Then scan the built image
    - trivy image --exit-code 1 --severity HIGH,CRITICAL $CI_REGISTRY_IMAGE/docker-registry-demo:$CI_COMMIT_SHORT_SHA
  cache:
    paths:
      - .trivycache/
  allow_failure: true

push:
  stage: push
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/docker-registry-demo:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE/docker-registry-demo:latest
  only:
    - main
